<?php
/**
 * @copyright   Copyright (C) 2015 IcoTheme.com. All Rights Reserved.
 */
?>
<?php
$catalogSearchHelper =  $this->helper('catalogsearch');
$currentCategory = $this->getCurrentCategory();
//$categoryMap = $this->getCategories();

$subcategoryIds = array('3','4','5','6');
// 2. Create collection
$categoryCollection = Mage::getModel('catalog/category')->getCollection();
// 3. Add all attributes to select, otherwise you can not 
//    access things like $cat->getName() etc.
$categoryCollection->addAttributeToSelect('*');
// 4. Filter by ids
$categoryCollection->addIdFilter($subcategoryIds);
// 5. Add filter to collection to get active categories only
$categoryCollection->addIsActiveFilter();
foreach ($categoryCollection as $category) {
    $categoryMap[$category->getId()] = $category->getName();
}
?>
<form id="search_mini_form" action="<?php echo $catalogSearchHelper->getResultUrl() ?>" method="get" class="search_mini_form_submit">
    <div class="input-group form-search">
        <span class="input-group-btn category-filter">
            <button type="button" class="btn dropdown-toggle" data-toggle="dropdown">
                <span class="category-label">
                    <?php echo isset($categoryMap[$currentCategory]) ? $categoryMap[$currentCategory] : $this->__('All Categories') ?>
                </span>&nbsp;<i class="fa fa-angle-down"></i>
            </button>
            <ul class="dropdown-menu">
                <li><a href="javascript:void(0)" data-value=""><?php echo $this->__('All Categories') ?></a></li>
                <?php foreach ($categoryMap as $categoryId => $categoryName): ?>
                    <li><a href="javascript:void(0)" data-value="<?php echo $categoryId ?>"><?php echo $categoryName ?></a></li>
                <?php endforeach ?>
            </ul>
        </span>
        <input type="hidden" name="cat" value="<?php echo $currentCategory ?>"/>
        <input id="search"
               type="search"
               name="<?php echo $catalogSearchHelper->getQueryParamName() ?>"
               value="<?php echo $catalogSearchHelper->getEscapedQueryText() ?>"
               class="input-text required-entry input-text_search_mini"
               maxlength="<?php echo $catalogSearchHelper->getMaxQueryLength() ?>"
               />
        <button type="submit" title="<?php echo $this->__('Search') ?>" class="search-button"><span><span><i class="fa fa-search"></i></span></span></button>
    </div>
    <div id="search_autocomplete" class="search-autocomplete" style="display: none"></div>
    <script type="text/javascript">


    //<![CDATA[
        var CatSearch = Class.create(Varien.searchForm, {
            initAutocomplete: function(url, destinationElement){
                new Ajax.Autocompleter(this.field, destinationElement, url, {
                    paramName: this.field.name,
                    method: 'get',
                    minChars: 2,
                    updateElement: this._selectAutocompleteItem.bind(this),
                    onShow: function(element, update) {
                        if(!update.style.position || update.style.position=='absolute') {
                            update.style.position = 'absolute';
                            Position.clone(element, update, {
                                setHeight: false,
                                offsetTop: element.offsetHeight
                            });
                        }
                        Effect.Appear(update, {duration: 0});
                    }
                });
            },
            initSearchFilter: function(field, target){
                var fieldElm = this.form.down('input[name="' + field + '"]');
                if (!fieldElm) return;
                var targetElm = this.form.down(target);
                this.form.select('.form-search .dropdown-menu a').each(function(item){
                    Event.observe(item, 'click', function(){
					
                        fieldElm.value = item.readAttribute('data-value');
						
						jQuery('#search_mini_form input[name="cat"]').val(item.readAttribute('data-value'))
                        if (targetElm) targetElm.update(item.innerHTML);
						var encodedval=item.innerHTML;
						jQuery('#search_mini_form .dropdown-toggle .category-label').text(encodedval.replace(/&amp;/g, '&'));
						
                    });
                });
            }
        });
        var searchForm = new CatSearch('search_mini_form', 'search', '');
        searchForm.initAutocomplete('<?php echo $catalogSearchHelper->getSuggestUrl() ?>', 'search_autocomplete');
        searchForm.initSearchFilter('cat', '.category-label');
		

		jQuery('#search_mini_form ul.dropdown-menu li a').click(function (e) {
			e.preventDefault();

			var h = jQuery(this).attr('data-value');
			jQuery('#search_mini_form input[name="cat"]').val(h);
			var encodedval=jQuery(this).html();
			
			jQuery('#search_mini_form .dropdown-toggle .category-label').text(encodedval.replace(/&amp;/g, '&'));
			
		});

    //]]>
    </script>
</form>
